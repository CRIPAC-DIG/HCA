

params:
    ('dataset', 'user_buys.txt')
    ('mode', 'test')
    ('split', [0.8])
    ('at_nums', [1, 2, 5, 10, 15, 20])
    ('intervals', [2, 10, 30])
    ('epochs', 100)
    ('latent_size', [20, 1024, 100])
    ('alpha', 0.01)
    ('lambda', 0.001)
    ('window_h', 2)
    ('window_x', 2)
    ('batch_size_train', 1)
    ('batch_size_test', 600)
    Original data ...
        users num:        65573
        trans num:        833646
        items num:        69210
        sparsity:         0.999816309047
        avg. user buy:    12.7132508807
        avg. item bought: 12.0451668834
    Remove duplicates in test set: mode = test ...
        user  num:        65573
        trans num:        833646
        items num:        69210
        sparsity:         0.999816309047
        avg. user buy:    12.7132508807
        avg. item bought: 12.0451668834
    Use aliases to represent items ...
    Devide test items into intervals ...
        intervals               = [2, 10, 30]
        test_i_intervals_cumsum = [ 30803  43519  51720  58001  63065  66917  70256  73274  75970 192615]
        test_i_cold_warm        = [ 43519 149096]
data:
	--------------------------------------------------------------
    split=0.8, test自身去重
    All values is the "best * 100" on epoch 99:
    每个跑4次：
        109 *2,
        151 *1,
        111 *1



【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【
MArank: 3次平均
    --------------------------------------------------------------


MArank:
    epoch = 200
    lam = 0.001
    batch = 16
    len/lay = 2/5 【batch 16, 这个最好】
                AUC       = [88.2906],          [196]
                Recall    = [9.0315, 11.8615, 15.4739, 22.3970],                [162 195 198 195]
                MAP       = [3.6590, 4.1166, 4.3483, 4.5788],           [162 162 162 195]
                NDCG      = [6.7174, 7.9132, 8.7628, 10.7707],          [162 162 162 195]

    batch = 4
    len/lay = 2/5 【batch 4, 这组最好】【paper用了这组】
                AUC       = [89.3887],          [196]
                Recall    = [10.5713, 16.4276, 24.9176, 27.3291],               [162 199 195 195]
                MAP       = [4.2585, 4.9281, 5.6039, 5.8292],           [162 162 195 195]
                NDCG      = [7.8074, 9.4446, 12.3506, 13.1532],                 [162 162 195 195]



【以下是之前结果，程序有错误的情况】
    【逐条训练】【太慢，不现实】
    Epoch 50 ==================================
        -----------------------------------------------------------------
        All values is the "best * 100" on epoch 50: | 2019.03.19 18:51:40 | 20.06h/51=0.39h
                AUC       = [84.1227],          [6]
                Recall    = [0.7466, 2.0725, 3.0927, 4.2089],           [48 48 11 11]
                MAP       = [0.2326, 0.4138, 0.4804, 0.5113],           [48 48 48 48]
                NDCG      = [0.4852, 1.0702, 1.3559, 1.7014],           [48 48 48 11]
        avg. time (train, user, test): 1347s, 1s, 65s | alpha, lam: 0.01, 0.001 | model: OboMArank
    【mini-batch = 16】【有效果，但还是比较差】
        -----------------------------------------------------------------
        All values is the "best * 100" on epoch 99: | 2019.03.19 08:27:59 | 6.08h/100=0.06h
                AUC       = [82.9395],          [58]
                Recall    = [4.1274, 5.6673, 6.6340, 7.2544],           [9 6 6 6]
                MAP       = [2.4713, 2.6981, 2.7773, 2.8168],           [9 9 9 9]
                NDCG      = [3.9747, 4.6266, 4.9390, 5.1319],           [9 9 9 9]
        avg. time (train, user, test): 120s, 1s, 95s | alpha, lam: 0.01, 0.001 | model: MArank



【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【【



